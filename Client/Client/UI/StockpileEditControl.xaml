<UserControl
	x:ClassModifier="internal"
	x:Class="Dwarrowdelf.Client.UI.StockpileEditControl"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:common="clr-namespace:Dwarrowdelf;assembly=Dwarrowdelf.Common"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:client="clr-namespace:Dwarrowdelf.Client"
	xmlns:ui="clr-namespace:Dwarrowdelf.Client.UI"
	x:Name="root"
	DataContext="{Binding}"
	d:DataContext="{d:DesignInstance Type=ui:DesignStockpileSample, IsDesignTimeCreatable=True}">

	<UserControl.Resources>
		<ui:StockpileEditControlMockData x:Key="DesignViewModel"/>

		<ObjectDataProvider x:Key="itemIDs" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="common:ItemID" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<ObjectDataProvider x:Key="itemCategories" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="common:ItemCategory" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<ObjectDataProvider x:Key="materialIDs" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="common:MaterialID" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>

		<ObjectDataProvider x:Key="materialCategories" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
			<ObjectDataProvider.MethodParameters>
				<x:Type TypeName="common:MaterialCategory" />
			</ObjectDataProvider.MethodParameters>
		</ObjectDataProvider>
	</UserControl.Resources>

	<DockPanel>
		<UniformGrid DockPanel.Dock="Bottom" Columns="2">
			<Button Click="Destruct_Button_Click">Destruct</Button>
			<Button Click="Apply_Button_Click" IsDefault="True">Apply</Button>
		</UniformGrid>

		<Grid DataContext="{Binding Criteria, ElementName=root}"
			  d:DataContext="{StaticResource DesignViewModel}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition />
			</Grid.ColumnDefinitions>

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>

			<Grid.Resources>
				<HierarchicalDataTemplate ItemsSource="{Binding Items}" DataType="{x:Type ui:SelectableMaterialCategory}">
					<StackPanel Orientation="Horizontal">
						<CheckBox IsChecked="{Binding IsSelected}" Focusable="False" VerticalAlignment="Center" />
						<ContentPresenter Content="{Binding Value, Mode=OneTime}" Margin="2,0" />
					</StackPanel>
				</HierarchicalDataTemplate>

				<DataTemplate DataType="{x:Type ui:SelectableMaterialID}">
					<StackPanel Orientation="Horizontal">
						<CheckBox IsChecked="{Binding IsSelected}" Focusable="False" VerticalAlignment="Center" />
						<ContentPresenter Content="{Binding Value, Mode=OneTime}" Margin="2,0" />
					</StackPanel>
				</DataTemplate>

				<HierarchicalDataTemplate ItemsSource="{Binding Items}" DataType="{x:Type ui:SelectableItemCategory}">
					<StackPanel Orientation="Horizontal">
						<CheckBox IsChecked="{Binding IsSelected}" Focusable="False" VerticalAlignment="Center" />
						<ContentPresenter Content="{Binding Value, Mode=OneTime}" Margin="2,0" />
					</StackPanel>
				</HierarchicalDataTemplate>

				<DataTemplate DataType="{x:Type ui:SelectableItemID}">
					<StackPanel Orientation="Horizontal">
						<CheckBox IsChecked="{Binding IsSelected}" Focusable="False" VerticalAlignment="Center" />
						<ContentPresenter Content="{Binding Value, Mode=OneTime}" Margin="2,0" />
					</StackPanel>
				</DataTemplate>
			</Grid.Resources>

			<TextBlock Grid.Column="0" Grid.Row="0" Text="Item Types" Padding="4" />
			<TextBlock Grid.Column="1" Grid.Row="0" Text="Material Types" Padding="4" />

			<TreeView Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Path=ItemsList}"  TabIndex="0">
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}">
						<!-- <Setter Property="IsExpanded" Value="True"/> -->
						<EventSetter Event="KeyDown" Handler="OnItemKeyDown" />
					</Style>
				</TreeView.ItemContainerStyle>
			</TreeView>

			<TreeView Grid.Column="1" Grid.Row="1" ItemsSource="{Binding Path=MaterialsList}" IsEnabled="False">
				<TreeView.ItemContainerStyle>
					<Style TargetType="{x:Type TreeViewItem}">
						<!-- <Setter Property="IsExpanded" Value="True"/> -->
						<EventSetter Event="KeyDown" Handler="OnItemKeyDown" />
					</Style>
				</TreeView.ItemContainerStyle>
			</TreeView>

		</Grid>
	</DockPanel>
</UserControl>
